name: Release

on: 
  push:
    branches: [ release ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
    
      - name: Change Release Version
        run: mvn org.apache.maven.plugins:maven-release-plugin:3.0.0-M1:update-versions
      
      - name: Get Tag Name
        id: get_tag_name
        run: |
          echo ::set-output name=ltag::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      
      - name: Format Tag Name
        id: format_tag_name
        run: |
          echo ::set-output name=ftag::$(echo ${{ steps.get_tag_name.outputs.ltag }} | cut -d'-' -f 1 )
        
      - name: Get Previous Tag Name
        id: get_previous_tag_name
        run: |
          echo ::set-output name=ptag::$(git describe --abbrev=0 --tags)
          
      - run: |
          echo "Previous Tag = ${{ steps.get_previous_tag_name.outputs.ptag }}"
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml
        
      - run: mkdir staging && cp ./target/*.jar staging
      
      - name: Archive Release
        uses: papeloto/action-zip@v1
        with:
          files: staging/*.*
          dest: staging/hellogithub-v${{ steps.format_tag_name.outputs.ftag }}.zip
      
      - name: Create changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.MYGITHUB_TOKEN }}
          sinceTag: ${{ steps.get_previous_tag_name.outputs.ptag }}
          excludeLabels: 'development' 
          output: temp_changelog.md
          unreleased: true
          issues: true
          issuesWoLabels: true
          pullRequests: true
          prWoLabels: true
          filterByMilestone: false
          stripGeneratorNotice: true
          stripHeaders: true
        
      - run: |
          tee < ./temp_changelog.md
        
      - name: Read changelog
        id: read-changelog
        uses: juliangruber/read-file-action@v1
        with:
          path: ./temp_changelog.md
    
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.format_tag_name.outputs.ftag }}
          release_name: v${{ steps.format_tag_name.outputs.ftag }}
          draft: false
          prerelease: false
          body: |
            ## Changes in v${{ steps.format_tag_name.outputs.ftag }}
            ${{ steps.read-changelog.outputs.content }}
            
      - name: Attach Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./staging/hellogithub-v${{ steps.format_tag_name.outputs.ftag }}.zip
          asset_name: hellogithub-v${{ steps.format_tag_name.outputs.ftag }}.zip
          asset_content_type: application/zip
            
      - run: |
          echo "# hellogithub-v${{ steps.format_tag_name.outputs.ftag }}" >> CHANGELOG.md
          echo "## Changes" >> CHANGELOG.md
          echo "${{ steps.read-changelog.outputs.content }}" >> CHANGELOG.md
    
      - run: git config user.name "GitHub Actions" && git config user.email "actions@github.com"
      - run: git status
      - run: git add pom.xml CHANGELOG.md
      - run: git commit -m "Updated pom.xml and CHANGELOG.md for new version"
      - run: git fetch --all origin
      - run: git push --all origin
      
      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}
