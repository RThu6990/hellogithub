name: Release

on: 
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
    
      - name: Change Release Version
        run: mvn org.apache.maven.plugins:maven-release-plugin:3.0.0-M1:update-versions
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      
      - name: Get Tag Name
        id: get_tag_name
        run: |
          echo ::set-output name=ltag::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      
      - name: Format Tag Name
        id: format_tag_name
        run: |
          echo ::set-output name=ftag::$(echo ${{ steps.get_tag_name.outputs.ltag }} | cut -d'-' -f 1 )
        
      - name: Get Previous Tag Name
        id: get_previous_tag_name
        run: |
          echo ::set-output name=ptag::$(git describe --abbrev=0 --tags)
      
      - name: Create changelog
        run: git ithub_changelog_generator --add-sections '{"documentation":{"prefix":"**Documentation updates:**","labels":["documentation"]}}' --token ${{ secrets.MYGITHUB_TOKEN }}
        
      - run: |
          tee < ./CHANGELOG.md
        
      - name: Read changelog
        id: read-changelog
        uses: juliangruber/read-file-action@v1
        with:
          path: ./CHANGELOG.md
    
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.format_tag_name.outputs.ftag }}
          release_name: v${{ steps.format_tag_name.outputs.ftag }}
          draft: false
          prerelease: false
          body: |
            # hellogithub
            ## Changes
            ${{ steps.read-changelog.outputs.content }}
    
      - run: git config user.name "GitHub Actions" && git config user.email "actions@github.com"
      - run: git status
      - run: git add pom.xml
      - run: git commit -m "build:Updated pom.xml with new version number"
      - run: git fetch origin master
      - run: git push origin HEAD:master
